<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name        "controlr">
<!ENTITY author      "Juan B. Rodriguez">
<!ENTITY version     "2.0.0">
<!ENTITY launch      "Settings/&name;">
<!ENTITY pluginURL   "https://raw.githubusercontent.com/jbrodriguez/unraid/master/plugins/&name;.plg">
<!ENTITY bundle      "&name;-&version;.tgz">
<!ENTITY md5         "7bcd1ea3d9f494f31e9e6fa57ae89ff9">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;"
>

<CHANGES>
2017-06-15 - 2.0.0

This release provides initial support for unRAID 6.4.x+.

The app is now reachable via both http and https.

When connecting via https, you'll get a warning since it
uses a self-signed certificate, but you can dismiss it.

It will generate the certificates if they're not present in
their default location (/boot/config/plugins/controlr).

You can use your own (maybe Let's Encrypt created), to
prevent the warning from showing at all.

Additionally, the following features/fixes were added:
- Upgraded packages
- Improved port detection
- Modified jwt secret generation
</CHANGES>

<!--
ControlR is a companion plugin for the ControlR app.
-->

<!--
Get the ControlR bundle.
-->
<FILE Name="/boot/config/plugins/&name;/&bundle;">
<URL>"https://github.com/jbrodriguez/controlr/releases/download/&version;/&bundle;"</URL>
<MD5>&md5;</MD5>
</FILE>

<!-- Install default plugin cfg  -->
<FILE Name="/boot/config/plugins/controlr/controlr.cfg">
<INLINE>
<![CDATA[
SERVICE="disable"
PORT="2378"
]]>
</INLINE>
</FILE>

<!--
Prepare for installation.
-->
<FILE Run="/bin/bash">
<INLINE>
running=$(pidof controlr | wc -w)

# Let's stop the controlr process, if it's running
/usr/local/emhttp/plugins/&name;/scripts/stop

# Remove emhttp files so we can re-install.
rm -rf /usr/local/emhttp/plugins/&name;/* 2>/dev/null

# Remove old 'bundle' files.
rm -f $(ls /boot/config/plugins/&name;/&name;*.tgz 2>/dev/null | grep -v '&version;')

# Install the 'bundle'.
tar -xf /boot/config/plugins/&name;/&bundle; -C /usr/local/emhttp/plugins

# start the plugin if it was running previously
if [ $running -eq 1 ]; then
	/usr/local/emhttp/plugins/&name;/scripts/start
fi

echo ""
echo "-----------------------------------------------------------"
echo " ControlR has been installed."
echo " Copyright (c) &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
/usr/local/emhttp/plugins/&name;/scripts/stop
# Remove all plugin files.
rm -rf /usr/local/emhttp/plugins/&name;
rm -rf /boot/config/plugins/&name;

echo ""
echo "-----------------------------------------------------------"
echo " ControlR has been removed."
echo " Copyright (c) &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<FILE Name="/tmp/controlr-chkconf" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/sh
# This will check each entry in the config so nothing is missing, and if missing, sets to default
CFGFILE=/boot/config/plugins/controlr/controlr.cfg
[ ! `cat "$CFGFILE" | grep SERVICE` ] && echo "SERVICE=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep ^PORT` ] && echo "PORT=\"2378\"" >> "$CFGFILE"
rm /tmp/controlr-chkconf
]]>
</INLINE>
</FILE>

</PLUGIN>
